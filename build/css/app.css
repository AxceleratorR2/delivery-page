/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{-webkit-text-size-adjust:100%;line-height:1.15}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}[hidden],template{display:none}.text-center{text-align:center}.bg-primario{background-color:#e8505b}html{box-sizing:border-box;font-size:62.5%}*,:after,:before{box-sizing:inherit}body{font-family:Roboto,sans-serif;font-size:1.6rem}p{color:#000;font-size:2rem}.contenedor{margin:0 auto;max-width:1200px;width:95%}a{text-decoration:none}img{display:block;max-width:100%}h1,h2,h3{margin:0 0 5rem}h1{font-size:4rem}h2{font-size:3.6rem}h3{font-size:3.2rem}.header{align-items:center;display:flex;flex-direction:column;padding:5rem 0}@media (min-width:1024px){.header{flex-direction:row;justify-content:space-between}}.header__logo{margin-bottom:5rem;width:30rem}@media (min-width:1024px){.header__logo{margin-bottom:0}}.nav{align-items:center;display:flex;flex-direction:column;gap:2rem;width:100%}@media (min-width:1024px){.nav{flex-direction:row;width:auto}}.nav__link{color:#000;font-size:2rem;font-weight:700}.nav__link--registrar{background-color:#e8505b;border:none;border-radius:1rem;color:#fff;display:block;font-size:2rem;font-weight:700;padding:1.2rem 3rem;text-align:center;text-decoration:none;transition:background-color .3s ease;width:100%}.nav__link--registrar:hover{background-color:#e22331;cursor:pointer}@media (min-width:768px){.nav__link--registrar{width:auto}.formulario__grid{display:grid;gap:5rem;grid-template-columns:repeat(2,1fr)}}.formulario__imagen-contenedor{display:flex;justify-content:center;margin-top:5rem}.formulario__imagen{width:30rem}@media (min-width:1024px){.formulario__imagen{width:100%}}.formulario__contenido{background-color:#e8505b;display:flex;flex-direction:column;justify-content:space-evenly;padding:5rem}.formulario__heading{color:#fff}.formulario__campo{margin-bottom:1rem}.formulario__label{color:#fff;display:block;margin:1rem 0;text-transform:uppercase}.formulario__input{border:none;padding:1.5rem;width:100%}.formulario__submit{background-color:#455a64;border:none;border-radius:1rem;color:#fff;display:block;font-size:2rem;font-weight:700;margin-top:2rem;padding:1.2rem 3rem;text-align:center;text-decoration:none;transition:background-color .3s ease;width:100%}.formulario__submit:hover{background-color:#303f46;cursor:pointer}@media (min-width:768px){.formulario__submit{width:auto;width:100%}}.pasos{margin-top:5rem}.pasos__heading{color:#fff}.pasos__heading--descripcion{display:block;font-size:1.8rem}.pasos__contenido{background-color:#e8505b;margin-top:-1px}@media (min-width:768px){.pasos__grid{display:grid;gap:5rem;grid-template-columns:repeat(3,1fr)}}.pasos__imagen{transition:transform .3s ease}.pasos__imagen:hover{transform:scale(1.1) rotate(-5deg)}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
